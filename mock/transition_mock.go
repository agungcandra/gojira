// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/agungcandra/gojira/service (interfaces: TransitionInterface)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	entity "github.com/agungcandra/gojira/entity"
	gomock "github.com/golang/mock/gomock"
)

// MockTransitionInterface is a mock of TransitionInterface interface.
type MockTransitionInterface struct {
	ctrl     *gomock.Controller
	recorder *MockTransitionInterfaceMockRecorder
}

// MockTransitionInterfaceMockRecorder is the mock recorder for MockTransitionInterface.
type MockTransitionInterfaceMockRecorder struct {
	mock *MockTransitionInterface
}

// NewMockTransitionInterface creates a new mock instance.
func NewMockTransitionInterface(ctrl *gomock.Controller) *MockTransitionInterface {
	mock := &MockTransitionInterface{ctrl: ctrl}
	mock.recorder = &MockTransitionInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTransitionInterface) EXPECT() *MockTransitionInterfaceMockRecorder {
	return m.recorder
}

// CodeReview mocks base method.
func (m *MockTransitionInterface) CodeReview(arg0 string, arg1 *entity.Credential) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CodeReview", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// CodeReview indicates an expected call of CodeReview.
func (mr *MockTransitionInterfaceMockRecorder) CodeReview(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CodeReview", reflect.TypeOf((*MockTransitionInterface)(nil).CodeReview), arg0, arg1)
}

// Done mocks base method.
func (m *MockTransitionInterface) Done(arg0 string, arg1 *entity.Credential) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Done", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Done indicates an expected call of Done.
func (mr *MockTransitionInterfaceMockRecorder) Done(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Done", reflect.TypeOf((*MockTransitionInterface)(nil).Done), arg0, arg1)
}

// GetCodeReviewTransition mocks base method.
func (m *MockTransitionInterface) GetCodeReviewTransition(arg0 string, arg1 *entity.Credential) *entity.Transition {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCodeReviewTransition", arg0, arg1)
	ret0, _ := ret[0].(*entity.Transition)
	return ret0
}

// GetCodeReviewTransition indicates an expected call of GetCodeReviewTransition.
func (mr *MockTransitionInterfaceMockRecorder) GetCodeReviewTransition(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCodeReviewTransition", reflect.TypeOf((*MockTransitionInterface)(nil).GetCodeReviewTransition), arg0, arg1)
}

// GetDoneTransition mocks base method.
func (m *MockTransitionInterface) GetDoneTransition(arg0 string, arg1 *entity.Credential) *entity.Transition {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDoneTransition", arg0, arg1)
	ret0, _ := ret[0].(*entity.Transition)
	return ret0
}

// GetDoneTransition indicates an expected call of GetDoneTransition.
func (mr *MockTransitionInterfaceMockRecorder) GetDoneTransition(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDoneTransition", reflect.TypeOf((*MockTransitionInterface)(nil).GetDoneTransition), arg0, arg1)
}

// GetInProgressTransition mocks base method.
func (m *MockTransitionInterface) GetInProgressTransition(arg0 string, arg1 *entity.Credential) *entity.Transition {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInProgressTransition", arg0, arg1)
	ret0, _ := ret[0].(*entity.Transition)
	return ret0
}

// GetInProgressTransition indicates an expected call of GetInProgressTransition.
func (mr *MockTransitionInterfaceMockRecorder) GetInProgressTransition(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInProgressTransition", reflect.TypeOf((*MockTransitionInterface)(nil).GetInProgressTransition), arg0, arg1)
}

// GetTransition mocks base method.
func (m *MockTransitionInterface) GetTransition(arg0 []string, arg1 []entity.Transition) *entity.Transition {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTransition", arg0, arg1)
	ret0, _ := ret[0].(*entity.Transition)
	return ret0
}

// GetTransition indicates an expected call of GetTransition.
func (mr *MockTransitionInterfaceMockRecorder) GetTransition(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTransition", reflect.TypeOf((*MockTransitionInterface)(nil).GetTransition), arg0, arg1)
}

// InProgress mocks base method.
func (m *MockTransitionInterface) InProgress(arg0 string, arg1 *entity.Credential) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InProgress", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// InProgress indicates an expected call of InProgress.
func (mr *MockTransitionInterfaceMockRecorder) InProgress(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InProgress", reflect.TypeOf((*MockTransitionInterface)(nil).InProgress), arg0, arg1)
}
